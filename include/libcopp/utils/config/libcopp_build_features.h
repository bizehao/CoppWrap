#ifndef COPP_UTILS_CONFIG_BUILD_FEATURES_H
#define COPP_UTILS_CONFIG_BUILD_FEATURES_H

# pragma once

// This file is  generated by cmake, please don't edit it

#include "libcopp/utils/config/compile_optimize.h"

#define LIBCOPP_VERSION_MAJOR 2
#ifndef LIBCOPP_VERSION_MAJOR
#  define LIBCOPP_VERSION_MAJOR 0
#endif
#define LIBCOPP_VERSION_MINOR 2
#ifndef LIBCOPP_VERSION_MINOR
#  define LIBCOPP_VERSION_MINOR 0
#endif
/* #undef LIBCOPP_VERSION_PATCH */
#ifndef LIBCOPP_VERSION_PATCH
#  define LIBCOPP_VERSION_PATCH 0
#endif
#define LIBCOPP_VERSION "2.2.0"

#define LIBCOPP_API_LEVEL 2002
#define LIBCOPP_COPP_NAMESPACE_BEGIN namespace copp { inline namespace v2002 {
#define LIBCOPP_COPP_NAMESPACE_END } }
#define LIBCOPP_COPP_NAMESPACE_ID copp::v2002
#define LIBCOPP_COPP_NAMESPACE "copp::v2002"
#define LIBCOPP_COTASK_NAMESPACE_BEGIN namespace cotask { inline namespace v2002 {
#define LIBCOPP_COTASK_NAMESPACE_END } }
#define LIBCOPP_COTASK_NAMESPACE_ID cotask::v2002
#define LIBCOPP_COTASK_NAMESPACE "cotask::v2002"

#if defined(LIBCOPP_API_COPP_NATIVE) && LIBCOPP_API_COPP_NATIVE
#  if defined(LIBCOPP_API_DLL) && LIBCOPP_API_DLL
#    define LIBCOPP_COPP_API UTIL_SYMBOL_EXPORT
#  else
#    define LIBCOPP_COPP_API
#  endif
#else
#  if defined(LIBCOPP_API_DLL) && LIBCOPP_API_DLL
#    define LIBCOPP_COPP_API UTIL_SYMBOL_IMPORT
#  else
#    define LIBCOPP_COPP_API
#  endif
#endif
#define LIBCOPP_COPP_API_HEAD_ONLY UTIL_SYMBOL_VISIBLE
#define LIBCOPP_COPP_API_C(R) extern "C" LIBCOPP_COPP_API R __cdecl

#if defined(LIBCOPP_API_COTASK_NATIVE) && LIBCOPP_API_COTASK_NATIVE
#  if defined(LIBCOPP_API_DLL) && LIBCOPP_API_DLL
#    define LIBCOPP_COTASK_API UTIL_SYMBOL_EXPORT
#  else
#    define LIBCOPP_COTASK_API
#  endif
#else
#  if defined(LIBCOPP_API_DLL) && LIBCOPP_API_DLL
#    define LIBCOPP_COTASK_API UTIL_SYMBOL_IMPORT
#  else
#    define LIBCOPP_COTASK_API
#  endif
#endif
#define LIBCOPP_COTASK_API_HEAD_ONLY UTIL_SYMBOL_VISIBLE
#define LIBCOPP_COTASK_API_C(R) extern "C" LIBCOPP_COTASK_API R __cdecl

/* #undef LIBCOPP_MACRO_USE_SEGMENTED_STACKS */
/* #undef LIBCOPP_MACRO_SYS_POSIX */
#define LIBCOPP_MACRO_SYS_WIN 1
/* #undef LIBCOPP_MACRO_USE_VALGRIND */

#define LIBCOPP_DISABLE_ATOMIC_LOCK 0
#define LIBCOPP_LOCK_DISABLE_MT 0
#define LIBCOPP_LOCK_DISABLE_THIS_MT 0

#ifndef LIBCOPP_FCONTEXT_USE_TSX
/* #undef LIBCOPP_FCONTEXT_USE_TSX */
#endif

/* #undef LIBCOTASK_MACRO_ENABLED */
/* #undef LIBCOTASK_MACRO_AUTO_CLEANUP_MANAGER */

#ifndef THREAD_TLS_USE_PTHREAD
/* #undef THREAD_TLS_USE_PTHREAD */
#endif

#if defined(__cpp_exceptions)
#  define LIBCOPP_MACRO_HAS_EXCEPTION __cpp_exceptions
#elif defined(__EXCEPTIONS) && __EXCEPTIONS
#  define LIBCOPP_MACRO_HAS_EXCEPTION 1
#elif defined(__clang__)
#  if __has_feature(cxx_exceptions)
#    define LIBCOPP_MACRO_HAS_EXCEPTION 1
#  endif
#elif defined(_MSC_VER)
#  if defined(_CPPUNWIND)
#    define LIBCOPP_MACRO_HAS_EXCEPTION 1
#  endif
#endif

#define LIBCOPP_MACRO_ENABLE_STD_COROUTINE 0
#define LIBCOPP_MACRO_USE_STD_EXPERIMENTAL_COROUTINE 0
#define LIBCOPP_MACRO_ENABLE_EXCEPTION 0
#define LIBCOPP_MACRO_ENABLE_STD_EXCEPTION_PTR 0
#define LIBCOPP_MACRO_ENABLE_RTTI 0
#define LIBCOPP_MACRO_ENABLE_STD_SPAN 0

// Patch for disable RTTI on later options
#if defined(LIBCOPP_MACRO_ENABLE_RTTI) && LIBCOPP_MACRO_ENABLE_RTTI
#  if defined(_MSC_VER)
#    if !defined(_CPPRTTI)
#      undef LIBCOPP_MACRO_ENABLE_RTTI
#    endif
#  elif defined(__GNUC__) && __GNUC__ >= 4
#    if !defined(__GXX_RTTI)
#      undef LIBCOPP_MACRO_ENABLE_RTTI
#    endif
#  endif
#endif

#if defined(__has_include)
#  if __has_include(<variant>)
#    define LIBCOPP_MACRO_ENABLE_STD_VARIANT 1
#  endif
#endif

#if defined(__cpp_concepts) && __cpp_concepts >= 201907L
#  define LIBCOPP_MACRO_ENABLE_CONCEPTS 1
#endif

#if defined(LIBCOPP_MACRO_ENABLE_EXCEPTION) && LIBCOPP_MACRO_ENABLE_EXCEPTION
#  define LIBCOPP_MACRO_NOEXCEPT noexcept
#  define LIBCOPP_MACRO_ENABLE_NOEXCEPT 1
#else 
#  define LIBCOPP_MACRO_NOEXCEPT
#endif

#define LIBCOPP_MACRO_ENABLE_WIN_FIBER 0

#endif
